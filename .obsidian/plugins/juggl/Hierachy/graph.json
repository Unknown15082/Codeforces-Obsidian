{"elements":{"nodes":[{"data":{"id":"core:Codeforces.md","name":"Codeforces","path":"Codeforces/Codeforces.md","content":"Index file","degree":2,"nameLength":10},"position":{"x":86.75,"y":105.05},"group":"nodes","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":false,"classes":"note"},{"data":{"id":"core:MEX Sequences - 1613D.md","name":"MEX Sequences - 1613D","path":"Codeforces/Math/MEX Sequences - 1613D.md","content":"[Problem Link](https://codeforces.com/problemset/problem/1613/D)\n%%[[Math]]%%\n\nXét một dãy số có MEX = $m$. Có 2 loại dãy số như sau thỏa mãn:\n- Dãy số có tất cả các số $< m$. Như vậy, dãy số này sẽ có dạng $0, ..., 0, 1, ..., 1, ..., m-1, ..., m-1$.\n- Dãy số có ít nhất 1 số $> m$. Khi đó, dãy sẽ có dạng $0, ..., m-1, x_1, x_2, ..., x_k$, với các số $x_i$ thuộc $\\{m-1, m+1\\}$.\n\nTa kí hiệu $dp[i][1]$ là số lượng các dãy dạng 1 có MEX = $i$, và $dp[i][2]$ là số dãy dạng 2 có MEX = $i$. Mỗi khi thêm 1 số $x$ mới, ta sẽ có 3 update sau:\n\n- Số các dãy dạng 1 có MEX = $x+1$ ($dp[x+1][0]$) sẽ tăng thêm gấp đôi (vì ta có thể giữ nguyên dãy cũ, hoặc thêm số $x$ vào cuối dãy). Ngoài ra, $dp[x+1][0]$ cũng tăng thêm $dp[x][0]$, vì thêm số $x$ vào cuối dãy dạng 1 với MEX = $x$ sẽ tạo một dãy dạng 1 mới có MEX = $x+1$.\n- Số các dãy dạng 2 có MEX = $x+1$ ($dp[x+1][1]$) sẽ tăng gấp đôi, vì ta có thể thêm $x$ vào dãy cũ hoặc giữ nguyên dãy.\n- Số các dãy dạng 2 có MEX = $x-1$ ($dp[x-1][1]$) sẽ tăng gấp đôi. Ngoài ra, ta còn có thể tạo ra dãy dạng này bằng cách thêm số $x$ vào cuối một dãy dạng 1 mà đã có MEX = $x-1$. Lưu ý rằng ta chỉ update $dp[x-1][1]$ khi $x > 0$.\n\nKết quả chúng ta cần là tổng tất cả các số trong mảng $dp$, trừ đi 1 (đó là dãy rỗng, có dạng 1 và MEX = $0$).\n\nDễ thấy rằng MEX tối đa của một dãy có $n$ số chính là $n$, vậy nên ta chỉ phải lưu $2(n+1)$ số trong mảng $dp$. Mỗi khi kiểm tra 1 số, ta thực hiện 3 lần update. Ta chỉ kiểm tra đúng $n$ số trong dãy, vậy nên độ phức tạp thời gian là $O(n)$.\n\n[Solution](https://codeforces.com/contest/1613/submission/137670465)\n\n","degree":1,"nameLength":21},"position":{"x":59.375,"y":39.95},"group":"nodes","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":false,"classes":"note"},{"data":{"id":"core:Math.md","name":"Math","path":"Codeforces/Math/Math.md","content":"Index file\n\n%%[[Codeforces]]%%","degree":2,"nameLength":4},"position":{"x":59.375,"y":72.45},"group":"nodes","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":false,"classes":"note"},{"data":{"id":"core:Array Game - 1600E.md","name":"Array Game - 1600E","path":"Codeforces/Combinatorics/Array Game - 1600E.md","content":"[Problem Link](https://codeforces.com/problemset/problem/1600/E)\n%%[[Combinatorics]]%%\n\nXét mảng $a_1, a_2, ..., a_n$, và giả sử đây là lượt của Alice.\n\nTa xét 2 trường hợp sau:\n\n1. $a_1 \\ne a_n$\n\nKhông mất tính tổng quát, giả sử $a_1 > a_n$. Xét dãy con tăng dài nhất bắt đầu từ $a_1$ là $a_1 < a_2 < ... < a_k$. Ta có 2 trường hợp sau:\n- $k$ % 2 = 1: Khi đó, Alice sẽ lấy số $a_1$. Do $a_2 > a_1 > a_n$ nên Bob bắt buộc phải chọn $a_2$, Alice tiếp tục lấy $a_3$, ... Cuối cùng, Bob sẽ lấy số $a_{k-1}$ và Alice sẽ chọn $a_k$. Do dãy $a_1, a_2, ..., a_k$ là dãy con tăng dài nhất nên $a_k \\ge a_{k+1}$ và $a_k > a_1 > a_n$, vậy nên Bob không thể chọn số nào nữa. Như vậy Alice thắng.\n- $k$ % 2 = 0: Nếu Alice chọn số $a_1$, mọi chuyện sẽ diễn ra như trên, nhưng với Bob chọn số $a_k$ thay vì Alice. Chứng minh tương tự, Bob sẽ thắng. Vì vậy, Alice sẽ bắt buộc phải chọn số $a_n$ để không thua, và bài toán trở về xét mảng $a_1, a_2, ..., a_{n-1}$ và hiện tại đang là lượt của Bob.\n\n2. $a_1 = a_n$\n\nTa xét tương tự như trên. Giả sử dãy con tăng dài nhất bắt đầu từ $a_1$ là $a_1, a_2, ..., a_x$, và dãy con giảm dài nhất kết thúc tại $a_n$ là $a_y, a_{y+1}, ..., a_n$. Ta đặt độ dài của dãy đầu là $L_1$ và độ dài dãy sau là $L_2$.\n\n- Nếu $L_1$ hoặc $L_2$ lẻ thì chứng minh như trên, Alice sẽ thắng.\n- Nếu $L_1$ và $L_2$ cùng chẵn thì tương tự, ta có thể chứng minh được là Bob thắng.\n\nTa sẽ dùng một hàm đệ quy $F(l, r, turn)$ để tìm người thắng cuộc trong bài toán xét mảng từ $a_l$ tới $a_r$ và người bắt đầu là $turn$. (Coi Alice $= 0$ và Bob $= 1$). Kết quả ta cần tìm là $F(1, n, 0)$. Do ta thấy mỗi hàm đệ quy chỉ gọi tối đa $1$ hàm khác, và mỗi lần như vậy, khoảng tìm kiếm sẽ giảm đi $1$ phần tử, vậy nên chỉ xảy ra tối đa $n$ lần gọi hàm.\n\nTa có thể tính được dãy con tăng dài nhất bắt đầu từ $a_x$ và dãy con giảm dài nhất kết thúc tại $a_x$ bằng cách pre-calculate trong $O(n)$. Vì vậy, ta sẽ tính mỗi hàm $F$ trong $O(1)$, và bài toán được giải quyết trong $O(n)$.\n\n[Solution](https://codeforces.com/contest/1600/submission/137756157)","degree":1,"nameLength":18},"position":{"x":151.475,"y":44.37499999999999},"group":"nodes","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":false,"classes":"note"},{"data":{"id":"core:Combinatorics.md","name":"Combinatorics","path":"Codeforces/Combinatorics/Combinatorics.md","content":"Index file\n\n%%[[Codeforces]]%%","degree":2,"nameLength":13},"position":{"x":114.125,"y":72.45},"group":"nodes","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":false,"classes":"note"}],"edges":[{"data":{"id":"core:MEX Sequences - 1613D.md->core:Math.md1","source":"core:MEX Sequences - 1613D.md","target":"core:Math.md","context":"%%[[Math]]%%","edgeCount":1},"position":{"x":0,"y":0},"group":"edges","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":true,"classes":"inline"},{"data":{"id":"core:Math.md->core:Codeforces.md1","source":"core:Math.md","target":"core:Codeforces.md","context":"%%[[Codeforces]]%%","edgeCount":1},"position":{"x":0,"y":0},"group":"edges","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":true,"classes":"inline"},{"data":{"id":"core:Array Game - 1600E.md->core:Combinatorics.md1","source":"core:Array Game - 1600E.md","target":"core:Combinatorics.md","context":"%%[[Combinatorics]]%%","edgeCount":1},"position":{"x":0,"y":0},"group":"edges","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":true,"classes":"inline"},{"data":{"id":"core:Combinatorics.md->core:Codeforces.md1","source":"core:Combinatorics.md","target":"core:Codeforces.md","context":"%%[[Codeforces]]%%","edgeCount":1},"position":{"x":0,"y":0},"group":"edges","removed":false,"selected":false,"selectable":true,"locked":false,"grabbable":true,"pannable":true,"classes":"inline"}]},"style":[{"selector":"node","style":{"background-color":"rgb(153,153,153)","color":"rgb(220,221,222)","text-valign":"bottom","shape":"ellipse","border-width":"0px","text-wrap":"wrap","min-zoomed-font-size":"8px"}},{"selector":"node[name]","style":{"label":"data(name)"}},{"selector":"node[degree]","style":{"width":"mapData(degree, 0, 60, 5, 35)","height":"mapData(degree, 0, 60, 5, 35)","font-size":"mapData(degree, 0, 60, 5, 11)","text-opacity":"mapData(degree, 0, 60, 0.7, 1)","text-max-width":"mapData(degree, 0, 60, 65px, 100px)"}},{"selector":"node:selected","style":{"background-blacken":"0.3","font-weight":"bold"}},{"selector":"node:selected[degree]","style":{"border-width":"mapData(degree, 0, 60, 1, 3)"}},{"selector":".dangling","style":{"background-color":"rgb(153,153,153)"}},{"selector":".image","style":{"shape":"round-rectangle","width":"50px","height":"50px","background-opacity":"0","background-image":"data(resource_url)","background-image-crossorigin":"anonymous","background-image-opacity":"1","background-fit":"contain","font-size":"0px","background-clip":"node"}},{"selector":".image.note","style":{"font-size":"mapData(degree, 0, 60, 5, 11)"}},{"selector":"edge","style":{"line-color":"rgb(51,51,51)","loop-sweep":"-50deg","loop-direction":"-45deg","width":"mapData(edgeCount, 1, 50, 0.55, 3)","target-arrow-shape":"vee","target-arrow-fill":"filled","target-arrow-color":"rgb(51,51,51)","arrow-scale":"mapData(edgeCount, 1, 50, 0.35, 1.5)","font-size":"6px","color":"rgb(220,221,222)","curve-style":"unbundled-bezier","control-point-distances":"23px","control-point-weights":"0.6"}},{"selector":"edge:selected","style":{"width":"0.7px","font-weight":"bold","line-color":"rgb(72,54,153)"}},{"selector":":loop","style":{"display":"none"}},{"selector":"edge[type]","style":{"label":"data(type)"}},{"selector":".inactive-node, .unhover","style":{"opacity":"0.3"}},{"selector":"node.active-node, node.hover","style":{"background-color":"rgb(72,54,153)","font-weight":"bold","border-width":"0.4px","border-color":"rgb(220,221,222)","opacity":"1"}},{"selector":"edge.hover, edge.connected-active-node, edge.connected-hover","style":{"width":"1px","opacity":"1"}},{"selector":"edge.hover, edge.connected-hover","style":{"font-weight":"bold","line-color":"rgb(72,54,153)","target-arrow-color":"rgb(72,54,153)"}},{"selector":"node.pinned","style":{"border-style":"dotted","border-width":"2px"}},{"selector":"node.protected","style":{"ghost":"yes","ghost-offset-x":"1px","ghost-offset-y":"1px","ghost-opacity":"0.5"}},{"selector":"node.hard-filtered, node.filtered","style":{"display":"none"}},{"selector":"node[title]","style":{"label":"data(title)"}},{"selector":"node[color]","style":{"background-color":"data(color)"}},{"selector":"node[shape]","style":{"shape":"data(shape)"}},{"selector":"node[width]","style":{"width":"data(width)"}},{"selector":"node[height]","style":{"width":"data(height)"}},{"selector":"node[image]","style":{"background-image":"data(image)"}}],"data":{},"zoomingEnabled":true,"userZoomingEnabled":true,"zoom":10,"minZoom":0.3,"maxZoom":10,"panningEnabled":true,"userPanningEnabled":true,"pan":{"x":-731.7186046511624,"y":-231.46705426356476},"boxSelectionEnabled":true,"renderer":{"name":"canvas"},"wheelSensitivity":1}